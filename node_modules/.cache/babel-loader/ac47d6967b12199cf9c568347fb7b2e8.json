{"ast":null,"code":"var _jsxFileName = \"/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/ProfileElement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { makeStyles, withStyles, FormControlLabel, TextField, Box, Typography, Button, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { uploadImageToCloudinaryAPIMethod, changeProfileAPIMethod, changePasswordAPIMethod, checkPasswordAPIMethod, getprofileurlAPIMethod } from \"../api/profileClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  fontSeparator: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n    color: theme.palette.secondary.main,\n    justifySelf: \"left\"\n  },\n  formLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  },\n  formContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"85%\"\n  },\n  boxContainer: {\n    flexDirection: \"row\",\n    width: \"70%\",\n    justifyContent: \"flex-start\"\n  },\n  inputText: {\n    width: \"50%\"\n  }\n}));\nconst StyledButton = withStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"white\",\n    width: \"30%\",\n    alignSelf: \"center\"\n  },\n  label: {\n    textTransform: \"capitalize\"\n  }\n}))(Button);\nexport default function ProfileElement(props) {\n  _s();\n\n  const classes = styles();\n  const [picture, setPicture] = useState(\"https://res.cloudinary.com/dtkgfy2wk/image/upload/v1620202579/vippng.com-empty-circle-png-4161690_reukek.png\");\n  const [success, setSuccess] = useState(\"success\");\n  const [open, setOpen] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  useEffect(() => {\n    console.log(\"testing123\");\n    getprofileurlAPIMethod(res => {\n      console.log(res.data.data.profile_url);\n      setPicture(res.data.data.profile_url);\n    });\n  }, [props.profile]);\n  var pictureRef = useRef(null);\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleNewPassword = e => {\n    setNewPassword(e.target.value);\n  };\n\n  const handleOldPassword = e => {\n    setOldPassword(e.target.value);\n  };\n\n  const handleConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const onClickSave = async e => {\n    try {\n      const currPassword = await checkPasswordAPIMethod({\n        password: oldPassword\n      });\n\n      if (!currPassword.data.success) {\n        setSuccess(\"warning\");\n        setOpen(true);\n        setSnackBarMessage(\"Wrong old password\");\n        return;\n      }\n\n      if (confirmPassword !== newPassword) {\n        setSuccess(\"warning\");\n        setOpen(true);\n        setSnackBarMessage(\"Confirm your password\");\n        return;\n      }\n\n      if (email) {\n        changeProfileAPIMethod({\n          email: email,\n          profile_url: picture\n        });\n      } else {\n        changeProfileAPIMethod({\n          profile_url: picture\n        });\n      }\n\n      if (newPassword) changePasswordAPIMethod({\n        password: newPassword\n      });\n      props.setProfile(prev => !prev);\n      setSuccess(\"success\");\n      setOpen(true);\n      setSnackBarMessage(\"Profile Updated\");\n    } catch (err) {\n      setSuccess(\"error\");\n      setOpen(true);\n      setSnackBarMessage(\"Fail to Update\");\n    }\n  };\n\n  const handleSnackbarClose = e => {\n    setOpen(false);\n  };\n\n  const handlePhotoChange = e => {\n    const selectedFile = e.target.files[0];\n    const t = selectedFile.type.split(\"/\").pop().toLowerCase();\n\n    if (t !== \"jpg\" && t !== \"jpeg\" && t !== \"png\" && t !== \"bmp\" && t !== \"gif\") {\n      alert(\"Enter valid file\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"upload_preset\", \"ckgxxhz4\");\n    formData.append(\"file\", selectedFile);\n    uploadImageToCloudinaryAPIMethod(formData, res => {\n      setPicture(res.url);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: picture,\n          style: {\n            height: \"75px\",\n            width: \"75px\",\n            marginRight: \"24px\",\n            borderRadius: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/*\",\n          style: {\n            display: \"none\"\n          },\n          onChange: handlePhotoChange,\n          ref: input => {\n            pictureRef = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: () => {\n            pictureRef.click();\n          },\n          children: \"Upload photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Change Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: email,\n          onChange: handleEmail,\n          label: \"Enter your Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: oldPassword,\n          onChange: handleOldPassword,\n          label: \"Enter Old Password: \",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Old Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: newPassword,\n          onChange: handleNewPassword,\n          label: \"Enter New Password: \",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: confirmPassword,\n          onChange: handleConfirmPassword,\n          label: \"Confirm password \",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(StyledButton, {\n        variant: \"contained\",\n        onClick: onClickSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 16\n      }, this),\n      style: {\n        marginBottom: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: `${success}`,\n        children: snackBarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProfileElement, \"rjyZzfSGW+mg4ahmfRTYSs88QlA=\");\n\n_c = ProfileElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileElement\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/ProfileElement.js"],"names":["React","useState","useRef","useEffect","makeStyles","withStyles","FormControlLabel","TextField","Box","Typography","Button","Snackbar","Alert","uploadImageToCloudinaryAPIMethod","changeProfileAPIMethod","changePasswordAPIMethod","checkPasswordAPIMethod","getprofileurlAPIMethod","styles","theme","fontSeparator","fontFamily","fontWeight","fontSize","color","palette","secondary","main","justifySelf","formLabel","display","justifyContent","width","formContainer","flexDirection","height","boxContainer","inputText","StyledButton","root","backgroundColor","alignSelf","label","textTransform","ProfileElement","props","classes","picture","setPicture","success","setSuccess","open","setOpen","snackBarMessage","setSnackBarMessage","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","console","log","res","data","profile_url","profile","pictureRef","handleEmail","e","target","value","handleNewPassword","handleOldPassword","handleConfirmPassword","onClickSave","currPassword","password","setProfile","prev","err","handleSnackbarClose","handlePhotoChange","selectedFile","files","t","type","split","pop","toLowerCase","alert","formData","FormData","append","url","marginRight","borderRadius","input","click","marginBottom","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  makeStyles,\n  withStyles,\n  FormControlLabel,\n  TextField,\n  Box,\n  Typography,\n  Button,\n  Snackbar,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\nimport {\n  uploadImageToCloudinaryAPIMethod,\n  changeProfileAPIMethod,\n  changePasswordAPIMethod,\n  checkPasswordAPIMethod,\n  getprofileurlAPIMethod,\n} from \"../api/profileClient\";\n\nconst styles = makeStyles((theme) => ({\n  fontSeparator: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n    color: theme.palette.secondary.main,\n    justifySelf: \"left\",\n  },\n  formLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  formContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"85%\",\n  },\n  boxContainer: {\n    flexDirection: \"row\",\n    width: \"70%\",\n    justifyContent: \"flex-start\",\n  },\n  inputText: {\n    width: \"50%\",\n  },\n}));\nconst StyledButton = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"white\",\n    width: \"30%\",\n    alignSelf: \"center\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n}))(Button);\nexport default function ProfileElement(props) {\n  const classes = styles();\n  const [picture, setPicture] = useState(\n    \"https://res.cloudinary.com/dtkgfy2wk/image/upload/v1620202579/vippng.com-empty-circle-png-4161690_reukek.png\"\n  );\n  const [success, setSuccess] = useState(\"success\");\n  const [open, setOpen] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  useEffect(() => {\n    console.log(\"testing123\");\n    getprofileurlAPIMethod((res) => {\n      console.log(res.data.data.profile_url);\n      setPicture(res.data.data.profile_url);\n    });\n  }, [props.profile]);\n\n  var pictureRef = useRef(null);\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const handleNewPassword = (e) => {\n    setNewPassword(e.target.value);\n  };\n  const handleOldPassword = (e) => {\n    setOldPassword(e.target.value);\n  };\n  const handleConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const onClickSave = async (e) => {\n    try {\n      const currPassword = await checkPasswordAPIMethod({\n        password: oldPassword,\n      });\n      if (!currPassword.data.success) {\n        setSuccess(\"warning\");\n        setOpen(true);\n        setSnackBarMessage(\"Wrong old password\");\n        return;\n      }\n      if (confirmPassword !== newPassword) {\n        setSuccess(\"warning\");\n        setOpen(true);\n        setSnackBarMessage(\"Confirm your password\");\n        return;\n      }\n      if (email) {\n        changeProfileAPIMethod({\n          email: email,\n          profile_url: picture,\n        });\n      } else {\n        changeProfileAPIMethod({\n          profile_url: picture,\n        });\n      }\n\n      if (newPassword)\n        changePasswordAPIMethod({\n          password: newPassword,\n        });\n      props.setProfile((prev) => !prev);\n      setSuccess(\"success\");\n      setOpen(true);\n      setSnackBarMessage(\"Profile Updated\");\n    } catch (err) {\n      setSuccess(\"error\");\n      setOpen(true);\n      setSnackBarMessage(\"Fail to Update\");\n    }\n  };\n\n  const handleSnackbarClose = (e) => {\n    setOpen(false);\n  };\n\n  const handlePhotoChange = (e) => {\n    const selectedFile = e.target.files[0];\n    const t = selectedFile.type.split(\"/\").pop().toLowerCase();\n    if (\n      t !== \"jpg\" &&\n      t !== \"jpeg\" &&\n      t !== \"png\" &&\n      t !== \"bmp\" &&\n      t !== \"gif\"\n    ) {\n      alert(\"Enter valid file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"upload_preset\", \"ckgxxhz4\");\n    formData.append(\"file\", selectedFile);\n    uploadImageToCloudinaryAPIMethod(formData, (res) => {\n      setPicture(res.url);\n    });\n  };\n  return (\n    <>\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <img\n              src={picture}\n              style={{\n                height: \"75px\",\n                width: \"75px\",\n                marginRight: \"24px\",\n                borderRadius: \"50%\",\n              }}\n            ></img>\n            <input\n              type=\"file\"\n              name=\"image\"\n              accept=\"image/*\"\n              style={{ display: \"none\" }}\n              onChange={handlePhotoChange}\n              ref={(input) => {\n                pictureRef = input;\n              }}\n            ></input>\n            <StyledButton\n              onClick={() => {\n                pictureRef.click();\n              }}\n            >\n              Upload photo\n            </StyledButton>\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Change Picture\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={email}\n              onChange={handleEmail}\n              label=\"Enter your Email: \"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Email Address\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={oldPassword}\n              onChange={handleOldPassword}\n              label=\"Enter Old Password: \"\n              type=\"password\"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Old Password\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={newPassword}\n              onChange={handleNewPassword}\n              label=\"Enter New Password: \"\n              type=\"password\"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            New Password\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={confirmPassword}\n              onChange={handleConfirmPassword}\n              label=\"Confirm password \"\n              type=\"password\"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Confirm Password\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        control={\n          <StyledButton variant=\"contained\" onClick={onClickSave}>\n            Save\n          </StyledButton>\n        }\n        label={<Typography className={classes.fontSeparator}></Typography>}\n        style={{ marginBottom: \"16px\" }}\n      ></FormControlLabel>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      >\n        <Alert onClose={handleSnackbarClose} severity={`${success}`}>\n          {snackBarMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}