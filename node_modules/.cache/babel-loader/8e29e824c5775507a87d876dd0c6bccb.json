{"ast":null,"code":"var _jsxFileName = \"/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/page/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/SideBar\";\nimport { Grid, Paper, makeStyles } from \"@material-ui/core\";\nimport UserHeader from \"../components/userHeader\";\nimport UserDashboard from \"../components/Dashboard SubComp/UserDashboard\";\nimport AdminDashboard from \"../components/Dashboard SubComp/adminDashboard\";\nimport { getBinomoDealsAPIMethod } from \"../api/profileClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\",\n    width: \"100vw\"\n  },\n  rightbar: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"80%\",\n    backgroundColor: theme.palette.primary.main,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  rightContainer: {\n    height: \"95%\",\n    width: \"95%\",\n    backgroundColor: theme.palette.primary.dark\n  }\n}));\nexport default function Dashboard() {\n  _s();\n\n  const [isAdmin, setIsAdmin] = useState(JSON.parse(localStorage.getItem(\"isAdmin\")));\n  const classes = styles();\n  useEffect(async () => {\n    try {\n      await getBinomoDealsAPIMethod(10, res => {\n        let won = 0;\n        let loss = 0;\n        let tie = 0;\n        res.data.data.forEach(element => element.status == \"won\" ? won = won + 1 : element.status == \"lost\" ? loss = loss + 1 : tie = tie + 1);\n        localStorage.setItem(\"seriesD\", [won, loss, tie]);\n      });\n    } catch (err) {\n      alert(err.response);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.rightbar,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.rightContainer,\n        children: [/*#__PURE__*/_jsxDEV(UserHeader, {\n          page: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), isAdmin ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"AWVwY1fTiyHCdeXFx1bZDXADcFM=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/page/Dashboard.js"],"names":["React","useState","useEffect","Sidebar","Grid","Paper","makeStyles","UserHeader","UserDashboard","AdminDashboard","getBinomoDealsAPIMethod","styles","theme","root","height","width","rightbar","display","backgroundColor","palette","primary","main","alignItems","justifyContent","rightContainer","dark","Dashboard","isAdmin","setIsAdmin","JSON","parse","localStorage","getItem","classes","res","won","loss","tie","data","forEach","element","status","setItem","err","alert","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/SideBar\";\n\nimport { Grid, Paper, makeStyles } from \"@material-ui/core\";\n\nimport UserHeader from \"../components/userHeader\";\nimport UserDashboard from \"../components/Dashboard SubComp/UserDashboard\";\nimport AdminDashboard from \"../components/Dashboard SubComp/adminDashboard\";\nimport { getBinomoDealsAPIMethod } from \"../api/profileClient\";\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n  rightbar: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"80%\",\n    backgroundColor: theme.palette.primary.main,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  rightContainer: {\n    height: \"95%\",\n    width: \"95%\",\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\n\nexport default function Dashboard() {\n  const [isAdmin, setIsAdmin] = useState(\n    JSON.parse(localStorage.getItem(\"isAdmin\"))\n  );\n  const classes = styles();\n\n  useEffect(async () => {\n    try {\n      await getBinomoDealsAPIMethod(10, (res) => {\n        let won = 0;\n        let loss = 0;\n        let tie = 0;\n        (res.data.data).forEach(element => (element.status == \"won\") ? won = won + 1 : ((element.status == \"lost\") ? loss = loss + 1 : tie = tie + 1));\n        localStorage.setItem(\"seriesD\", [won, loss, tie]);\n      });\n    } catch (err) {\n      alert(err.response);\n    }\n  }, []);\n\n\n  return (\n    <Grid container alignItems=\"center\" className={classes.root}>\n      <Sidebar />\n      <Grid item className={classes.rightbar}>\n        <Paper className={classes.rightContainer}>\n          <UserHeader page=\"Dashboard\" />\n          {isAdmin ? <AdminDashboard /> : <UserDashboard />}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}