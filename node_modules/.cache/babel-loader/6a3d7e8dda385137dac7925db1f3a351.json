{"ast":null,"code":"const defaultHeaders = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n  }\n};\nexport const ContactUsInfoAPIMethod = (userInfo, success) => {\n  return fetch(`http://localhost:5000/api/admin/ContactUs`, { ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(userInfo)\n  }).then(checkStatus).then(success);\n};\n_c = ContactUsInfoAPIMethod;\nexport const signUpAPIInfo = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/register`, { ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(profile)\n  }).then(checkStatus).then(success);\n};\nexport const LoginAPIMethod = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/login`, { ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(profile)\n  }).then(checkStatus).then(success);\n};\n_c2 = LoginAPIMethod;\nexport const LogoutAPIMethod = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/logout`, { ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(profile)\n  }).then(checkStatus).then(success);\n};\n_c3 = LogoutAPIMethod;\nexport const CheckOnlineAPIMethod = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/checkonline`, { ...defaultHeaders,\n    method: \"GET\"\n  }).then(checkStatus).then(success);\n};\n_c4 = CheckOnlineAPIMethod;\n\nasync function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const res = await parseJSON(response);\n    const error = new Error(`HTTP Error: ${response.statusText}`);\n    error.status = response.statusText;\n    error.response = res;\n    console.log(error);\n    throw error;\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ContactUsInfoAPIMethod\");\n$RefreshReg$(_c2, \"LoginAPIMethod\");\n$RefreshReg$(_c3, \"LogoutAPIMethod\");\n$RefreshReg$(_c4, \"CheckOnlineAPIMethod\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/api/generalClient.js"],"names":["defaultHeaders","headers","ContactUsInfoAPIMethod","userInfo","success","fetch","method","body","JSON","stringify","then","checkStatus","signUpAPIInfo","profile","LoginAPIMethod","LogoutAPIMethod","CheckOnlineAPIMethod","response","status","res","parseJSON","error","Error","statusText","console","log","json"],"mappings":"AAAA,MAAMA,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADY,CAAvB;AAMA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAC3D,SAAOC,KAAK,CAAE,2CAAF,EAA8C,EACxD,GAAGL,cADqD;AAExDM,IAAAA,MAAM,EAAE,MAFgD;AAGxDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AAHkD,GAA9C,CAAL,CAKJO,IALI,CAKCC,WALD,EAMJD,IANI,CAMCN,OAND,CAAP;AAOD,CARM;KAAMF,sB;AAUb,OAAO,MAAMU,aAAa,GAAG,CAACC,OAAD,EAAUT,OAAV,KAAsB;AACjD,SAAOC,KAAK,CAAE,4CAAF,EAA+C,EACzD,GAAGL,cADsD;AAEzDM,IAAAA,MAAM,EAAE,MAFiD;AAGzDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,OAAf;AAHmD,GAA/C,CAAL,CAKJH,IALI,CAKCC,WALD,EAMJD,IANI,CAMCN,OAND,CAAP;AAOD,CARM;AAUP,OAAO,MAAMU,cAAc,GAAG,CAACD,OAAD,EAAUT,OAAV,KAAsB;AAClD,SAAOC,KAAK,CAAE,yCAAF,EAA4C,EACtD,GAAGL,cADmD;AAEtDM,IAAAA,MAAM,EAAE,MAF8C;AAGtDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,OAAf;AAHgD,GAA5C,CAAL,CAKJH,IALI,CAKCC,WALD,EAMJD,IANI,CAMCN,OAND,CAAP;AAOD,CARM;MAAMU,c;AASb,OAAO,MAAMC,eAAe,GAAG,CAACF,OAAD,EAAUT,OAAV,KAAsB;AACnD,SAAOC,KAAK,CAAE,0CAAF,EAA6C,EACvD,GAAGL,cADoD;AAEvDM,IAAAA,MAAM,EAAE,MAF+C;AAGvDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,OAAf;AAHiD,GAA7C,CAAL,CAKJH,IALI,CAKCC,WALD,EAMJD,IANI,CAMCN,OAND,CAAP;AAOD,CARM;MAAMW,e;AASb,OAAO,MAAMC,oBAAoB,GAAG,CAACH,OAAD,EAAUT,OAAV,KAAsB;AACxD,SAAOC,KAAK,CAAE,+CAAF,EAAkD,EAC5D,GAAGL,cADyD;AAE5DM,IAAAA,MAAM,EAAE;AAFoD,GAAlD,CAAL,CAIJI,IAJI,CAICC,WAJD,EAKJD,IALI,CAKCN,OALD,CAAP;AAMD,CAPM;MAAMY,oB;;AASb,eAAeL,WAAf,CAA2BM,QAA3B,EAAqC;AACnC,MAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOD,QAAP;AACD,GAFD,MAEO;AACL,UAAME,GAAG,GAAG,MAAMC,SAAS,CAACH,QAAD,CAA3B;AACA,UAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAW,eAAcL,QAAQ,CAACM,UAAW,EAA7C,CAAd;AACAF,IAAAA,KAAK,CAACH,MAAN,GAAeD,QAAQ,CAACM,UAAxB;AACAF,IAAAA,KAAK,CAACJ,QAAN,GAAiBE,GAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,UAAMA,KAAN;AACD;AACF;;AACD,SAASD,SAAT,CAAmBH,QAAnB,EAA6B;AAC3B,SAAOA,QAAQ,CAACS,IAAT,EAAP;AACD","sourcesContent":["const defaultHeaders = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=UTF-8\",\n  },\n};\n\nexport const ContactUsInfoAPIMethod = (userInfo, success) => {\n  return fetch(`http://localhost:5000/api/admin/ContactUs`, {\n    ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(userInfo),\n  })\n    .then(checkStatus)\n    .then(success);\n};\n\nexport const signUpAPIInfo = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/register`, {\n    ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(profile),\n  })\n    .then(checkStatus)\n    .then(success);\n};\n\nexport const LoginAPIMethod = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/login`, {\n    ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(profile),\n  })\n    .then(checkStatus)\n    .then(success);\n};\nexport const LogoutAPIMethod = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/logout`, {\n    ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(profile),\n  })\n    .then(checkStatus)\n    .then(success);\n};\nexport const CheckOnlineAPIMethod = (profile, success) => {\n  return fetch(`http://localhost:5000/api/profile/checkonline`, {\n    ...defaultHeaders,\n    method: \"GET\",\n  })\n    .then(checkStatus)\n    .then(success);\n};\n\nasync function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const res = await parseJSON(response);\n    const error = new Error(`HTTP Error: ${response.statusText}`);\n    error.status = response.statusText;\n    error.response = res;\n    console.log(error);\n    throw error;\n  }\n}\nfunction parseJSON(response) {\n  return response.json();\n}\n"]},"metadata":{},"sourceType":"module"}