{"ast":null,"code":"var _jsxFileName = \"/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/ProfileElement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { makeStyles, withStyles, FormControlLabel, TextField, Box, Typography, Button, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { uploadImageToCloudinaryAPIMethod, changeProfileAPIMethod, changePasswordAPIMethod, checkPasswordAPIMethod } from \"../api/profileClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  fontSeparator: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n    color: theme.palette.secondary.main,\n    justifySelf: \"left\"\n  },\n  formLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  },\n  formContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"85%\"\n  },\n  boxContainer: {\n    flexDirection: \"row\",\n    width: \"70%\",\n    justifyContent: \"flex-start\"\n  },\n  inputText: {\n    width: \"50%\"\n  }\n}));\nconst StyledButton = withStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"white\",\n    width: \"30%\",\n    alignSelf: \"center\"\n  },\n  label: {\n    textTransform: \"capitalize\"\n  }\n}))(Button);\nexport default function ProfileElement(props) {\n  _s();\n\n  const classes = styles();\n  const [picture, setPicture] = useState(localStorage.getItem(\"profile_url\"));\n  const [success, setSuccess] = useState(\"success\");\n  const [open, setOpen] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState();\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  useEffect(() => {\n    console.log(localStorage.getItem(\"email\"));\n    console.log(localStorage.getItem(\"profile_url\"));\n  }, []);\n  var pictureRef = useRef(null);\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleNewPassword = e => {\n    setNewPassword(e.target.value);\n  };\n\n  const handleOldPassword = e => {\n    setOldPassword(e.target.value);\n  };\n\n  const handleConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const onClickSave = async e => {\n    try {\n      if (oldPassword === \"\") {\n        console.log(\"profile pic change\", oldPassword);\n\n        if (email) {\n          changeProfileAPIMethod({\n            email: email,\n            profile_url: picture\n          });\n        } else {\n          changeProfileAPIMethod({\n            profile_url: picture\n          });\n        }\n\n        localStorage.setItem(\"profile_url\", picture);\n        setSuccess(\"success\");\n        setOpen(true);\n        setSnackBarMessage(\"Profile Updated\");\n      } else {\n        const currPassword = await checkPasswordAPIMethod({\n          password: oldPassword\n        });\n\n        if (!currPassword.data.success) {\n          setSuccess(\"warning\");\n          setOpen(true);\n          setSnackBarMessage(\"Wrong old password\");\n          return;\n        }\n\n        if (confirmPassword !== newPassword) {\n          setSuccess(\"warning\");\n          setOpen(true);\n          setSnackBarMessage(\"Confirm your password\");\n          return;\n        }\n\n        if (newPassword) changePasswordAPIMethod({\n          password: newPassword\n        });\n        setSuccess(\"success\");\n        setOpen(true);\n        setSnackBarMessage(\"Profile Updated\");\n      }\n    } catch (err) {\n      setSuccess(\"error\");\n      setOpen(true);\n      setSnackBarMessage(\"Fail to Update\");\n    }\n  };\n\n  const handleSnackbarClose = e => {\n    setOpen(false);\n  };\n\n  const handlePhotoChange = e => {\n    const selectedFile = e.target.files[0];\n    const t = selectedFile.type.split(\"/\").pop().toLowerCase();\n\n    if (t !== \"jpg\" && t !== \"jpeg\" && t !== \"png\" && t !== \"bmp\" && t !== \"gif\") {\n      alert(\"Enter valid file\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"upload_preset\", \"ckgxxhz4\");\n    formData.append(\"file\", selectedFile);\n    uploadImageToCloudinaryAPIMethod(formData, res => {\n      setPicture(res.url);\n      props.setProfilePicture(res.url);\n      console.log(res.url);\n      localStorage.setItem(\"profile_url\", res.url);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: picture,\n          style: {\n            height: \"75px\",\n            width: \"75px\",\n            marginRight: \"24px\",\n            borderRadius: \"50%\"\n          },\n          alt: \"user profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          accept: \"image/*\",\n          style: {\n            display: \"none\"\n          },\n          onChange: handlePhotoChange,\n          ref: input => {\n            pictureRef = input;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: () => {\n            pictureRef.click();\n          },\n          children: \"Upload photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Change Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: email,\n          onChange: handleEmail,\n          label: \"Enter your Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: oldPassword,\n          onChange: handleOldPassword,\n          label: \"Enter Old Password: \",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Old Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: newPassword,\n          onChange: handleNewPassword,\n          label: \"Enter New Password: \",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      className: classes.formLabel,\n      control: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        className: classes.boxContainer,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.inputText,\n          value: confirmPassword,\n          onChange: handleConfirmPassword,\n          label: \"Confirm password \",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this),\n      labelPlacement: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(StyledButton, {\n        variant: \"contained\",\n        onClick: onClickSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 16\n      }, this),\n      style: {\n        marginBottom: \"16px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: `${success}`,\n        children: snackBarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProfileElement, \"8c+ZJbKYNMJj9PhYKPYhGEKMC8c=\");\n\n_c = ProfileElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileElement\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/ProfileElement.js"],"names":["React","useState","useRef","useEffect","makeStyles","withStyles","FormControlLabel","TextField","Box","Typography","Button","Snackbar","Alert","uploadImageToCloudinaryAPIMethod","changeProfileAPIMethod","changePasswordAPIMethod","checkPasswordAPIMethod","styles","theme","fontSeparator","fontFamily","fontWeight","fontSize","color","palette","secondary","main","justifySelf","formLabel","display","justifyContent","width","formContainer","flexDirection","height","boxContainer","inputText","StyledButton","root","backgroundColor","alignSelf","label","textTransform","ProfileElement","props","classes","picture","setPicture","localStorage","getItem","success","setSuccess","open","setOpen","snackBarMessage","setSnackBarMessage","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","console","log","pictureRef","handleEmail","e","target","value","handleNewPassword","handleOldPassword","handleConfirmPassword","onClickSave","profile_url","setItem","currPassword","password","data","err","handleSnackbarClose","handlePhotoChange","selectedFile","files","t","type","split","pop","toLowerCase","alert","formData","FormData","append","res","url","setProfilePicture","marginRight","borderRadius","input","click","marginBottom","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  makeStyles,\n  withStyles,\n  FormControlLabel,\n  TextField,\n  Box,\n  Typography,\n  Button,\n  Snackbar,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\nimport {\n  uploadImageToCloudinaryAPIMethod,\n  changeProfileAPIMethod,\n  changePasswordAPIMethod,\n  checkPasswordAPIMethod,\n} from \"../api/profileClient\";\n\nconst styles = makeStyles((theme) => ({\n  fontSeparator: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"bold\",\n    fontSize: \"18px\",\n    color: theme.palette.secondary.main,\n    justifySelf: \"left\",\n  },\n  formLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  formContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"85%\",\n  },\n  boxContainer: {\n    flexDirection: \"row\",\n    width: \"70%\",\n    justifyContent: \"flex-start\",\n  },\n  inputText: {\n    width: \"50%\",\n  },\n}));\nconst StyledButton = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"white\",\n    width: \"30%\",\n    alignSelf: \"center\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n}))(Button);\nexport default function ProfileElement(props) {\n  const classes = styles();\n  const [picture, setPicture] = useState(localStorage.getItem(\"profile_url\"));\n  const [success, setSuccess] = useState(\"success\");\n  const [open, setOpen] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState();\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  useEffect(() => {\n    console.log(localStorage.getItem(\"email\"));\n    console.log(localStorage.getItem(\"profile_url\"));\n\n  }, []);\n\n  var pictureRef = useRef(null);\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const handleNewPassword = (e) => {\n    setNewPassword(e.target.value);\n  };\n  const handleOldPassword = (e) => {\n    setOldPassword(e.target.value);\n  };\n  const handleConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n\n  const onClickSave = async (e) => {\n    try {\n      if (oldPassword === \"\") {\n        console.log(\"profile pic change\", oldPassword);\n        if (email) {\n          changeProfileAPIMethod({\n            email: email,\n            profile_url: picture,\n          });\n        } else {\n          changeProfileAPIMethod({\n            profile_url: picture,\n          });\n        }\n        localStorage.setItem(\"profile_url\", picture);\n        setSuccess(\"success\");\n        setOpen(true);\n        setSnackBarMessage(\"Profile Updated\");\n      }\n      else {\n        const currPassword = await checkPasswordAPIMethod({\n          password: oldPassword,\n        });\n        if (!currPassword.data.success) {\n          setSuccess(\"warning\");\n          setOpen(true);\n          setSnackBarMessage(\"Wrong old password\");\n          return;\n        }\n        if (confirmPassword !== newPassword) {\n          setSuccess(\"warning\");\n          setOpen(true);\n          setSnackBarMessage(\"Confirm your password\");\n          return;\n        }\n        if (newPassword)\n          changePasswordAPIMethod({\n            password: newPassword,\n          });\n        setSuccess(\"success\");\n        setOpen(true);\n        setSnackBarMessage(\"Profile Updated\");\n      }\n    }\n    catch (err) {\n      setSuccess(\"error\");\n      setOpen(true);\n      setSnackBarMessage(\"Fail to Update\");\n    }\n\n  };\n\n  const handleSnackbarClose = (e) => {\n    setOpen(false);\n  };\n\n  const handlePhotoChange = (e) => {\n    const selectedFile = e.target.files[0];\n    const t = selectedFile.type.split(\"/\").pop().toLowerCase();\n    if (\n      t !== \"jpg\" &&\n      t !== \"jpeg\" &&\n      t !== \"png\" &&\n      t !== \"bmp\" &&\n      t !== \"gif\"\n    ) {\n      alert(\"Enter valid file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"upload_preset\", \"ckgxxhz4\");\n    formData.append(\"file\", selectedFile);\n    uploadImageToCloudinaryAPIMethod(formData, (res) => {\n      setPicture(res.url);\n      props.setProfilePicture(res.url);\n      console.log(res.url);\n      localStorage.setItem(\"profile_url\", res.url);\n\n    });\n\n  };\n  return (\n    <>\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <img\n              src={picture}\n              style={{\n                height: \"75px\",\n                width: \"75px\",\n                marginRight: \"24px\",\n                borderRadius: \"50%\",\n              }}\n              alt=\"user profile\"\n            ></img>\n            <input\n              type=\"file\"\n              name=\"image\"\n              accept=\"image/*\"\n              style={{ display: \"none\" }}\n              onChange={handlePhotoChange}\n              ref={(input) => {\n                pictureRef = input;\n              }}\n            ></input>\n            <StyledButton\n              onClick={() => {\n                pictureRef.click();\n              }}\n            >\n              Upload photo\n            </StyledButton>\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Change Picture\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={email}\n              onChange={handleEmail}\n              label=\"Enter your Email: \"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Email Address\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={oldPassword}\n              onChange={handleOldPassword}\n              label=\"Enter Old Password: \"\n              type=\"password\"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Old Password\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={newPassword}\n              onChange={handleNewPassword}\n              label=\"Enter New Password: \"\n              type=\"password\"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            New Password\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        className={classes.formLabel}\n        control={\n          <Box display=\"flex\" className={classes.boxContainer}>\n            <TextField\n              className={classes.inputText}\n              value={confirmPassword}\n              onChange={handleConfirmPassword}\n              label=\"Confirm password \"\n              type=\"password\"\n            />\n          </Box>\n        }\n        label={\n          <Typography className={classes.fontSeparator}>\n            Confirm Password\n          </Typography>\n        }\n        labelPlacement=\"start\"\n      />\n      <FormControlLabel\n        control={\n          <StyledButton variant=\"contained\" onClick={onClickSave}>\n            Save\n          </StyledButton>\n        }\n        label={<Typography className={classes.fontSeparator}></Typography>}\n        style={{ marginBottom: \"16px\" }}\n      ></FormControlLabel>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      >\n        <Alert onClose={handleSnackbarClose} severity={`${success}`}>\n          {snackBarMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}