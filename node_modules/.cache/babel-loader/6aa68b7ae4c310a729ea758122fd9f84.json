{"ast":null,"code":"var _jsxFileName = \"/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/Dashboard SubComp/adminDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, makeStyles, Typography, Container, FormControlLabel, IconButton } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { getAllUsersAPIMethod, adminLoginAPIMethod, deleteUserAPIMethod } from \"../../api/adminClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  cardContainer: {\n    marginTop: \"2%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  },\n  fontBody: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"regular\",\n    fontSize: \"12px\"\n  },\n  fontSeparator: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    color: theme.palette.secondary.main,\n    marginBottom: \"1%\"\n  }\n}));\n\nconst MatDelete = ({\n  index\n}) => {\n  const handleEditClick = async e => {\n    // some action\n    await deleteUserAPIMethod({\n      id: index\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"secondary\",\n      \"aria-label\": \"add an alarm\",\n      onClick: handleEditClick,\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        style: {\n          color: \"#0b4870\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MatDelete;\nexport default function AdminDashboard(props) {\n  _s();\n\n  const columns = [{\n    field: \"id\",\n    headerName: \"Id\",\n    width: 250\n  }, {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 250\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 250,\n    sortable: false\n  }, {\n    field: \"joinedDate\",\n    headerName: \"Joined Date\",\n    width: 250\n  }, {\n    field: \"type\",\n    headerName: \"Type\",\n    width: 100,\n    sortable: false\n  }, {\n    field: \"delete\",\n    width: 50,\n    sortable: false,\n    disableClickEventBubble: true,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        style: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MatDelete, {\n          index: params.row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const [rows, setRows] = useState([]);\n  const [checker, setChecker] = useState(true);\n  const classes = styles();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setRows(JSON.parse(localStorage.getItem(\"DashBoardusers\")));\n\n        if (rows.length === 0 || checker) {\n          await adminLoginAPIMethod({\n            email: localStorage.getItem(\"email\"),\n            password: props.pass\n          }, async res => {\n            await getAllUsersAPIMethod(res => {\n              console.log(res.data.data); //console log all users\n\n              localStorage.setItem(\"users\", JSON.stringify(res.data.data.users)); //stringify object and store\n\n              var temp = [];\n              res.data.data.users.forEach((el, index) => {\n                temp.push({\n                  id: el._id,\n                  name: el.name,\n                  email: el.email,\n                  joinedDate: el.joinedDate,\n                  type: el.accountType\n                });\n              });\n              localStorage.setItem(\"DashBoardusers\", JSON.stringify(temp)); //stringify object and store\n\n              setRows(temp);\n            });\n          });\n          setChecker(false);\n        }\n      } catch (err) {\n        console.log(err);\n        alert(err.response);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      display: \"flex\",\n      className: classes.cardContainer,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.fontSeparator,\n        children: \"All Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      style: {\n        height: \"70%\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        columnBuffer: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminDashboard, \"RBluhN3RmV5AJqH6nZGkuRdTzDM=\");\n\n_c2 = AdminDashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MatDelete\");\n$RefreshReg$(_c2, \"AdminDashboard\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/Dashboard SubComp/adminDashboard.js"],"names":["React","useEffect","useState","Box","makeStyles","Typography","Container","FormControlLabel","IconButton","DataGrid","DeleteIcon","getAllUsersAPIMethod","adminLoginAPIMethod","deleteUserAPIMethod","styles","theme","cardContainer","marginTop","display","justifyContent","width","fontBody","fontFamily","fontWeight","fontSize","fontSeparator","color","palette","secondary","main","marginBottom","MatDelete","index","handleEditClick","e","id","AdminDashboard","props","columns","field","headerName","sortable","disableClickEventBubble","renderCell","params","cursor","row","rows","setRows","checker","setChecker","classes","fetchData","JSON","parse","localStorage","getItem","length","email","password","pass","res","console","log","data","setItem","stringify","users","temp","forEach","el","push","_id","name","joinedDate","type","accountType","err","alert","response","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport {\n  Box,\n  makeStyles,\n  Typography,\n  Container,\n  FormControlLabel,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  getAllUsersAPIMethod,\n  adminLoginAPIMethod,\n  deleteUserAPIMethod,\n} from \"../../api/adminClient\";\n\nconst styles = makeStyles((theme) => ({\n  cardContainer: {\n    marginTop: \"2%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n\n  fontBody: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"regular\",\n    fontSize: \"12px\",\n  },\n  fontSeparator: {\n    fontFamily: \"Comfortaa\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    color: theme.palette.secondary.main,\n    marginBottom: \"1%\",\n  },\n}));\n\nconst MatDelete = ({ index }) => {\n  const handleEditClick = async (e) => {\n    // some action\n    await deleteUserAPIMethod({ id: index });\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <IconButton\n          color=\"secondary\"\n          aria-label=\"add an alarm\"\n          onClick={handleEditClick}\n        >\n          <DeleteIcon style={{ color: \"#0b4870\" }} />\n        </IconButton>\n      }\n    />\n  );\n};\n\nexport default function AdminDashboard(props) {\n  const columns = [\n    { field: \"id\", headerName: \"Id\", width: 250 },\n    { field: \"name\", headerName: \"Name\", width: 250 },\n    { field: \"email\", headerName: \"Email\", width: 250, sortable: false },\n    {\n      field: \"joinedDate\",\n      headerName: \"Joined Date\",\n      width: 250,\n    },\n    { field: \"type\", headerName: \"Type\", width: 100, sortable: false },\n    {\n      field: \"delete\",\n\n      width: 50,\n      sortable: false,\n      disableClickEventBubble: true,\n      renderCell: (params) => {\n        return (\n          <div\n            className=\"d-flex justify-content-between align-items-center\"\n            style={{ cursor: \"pointer\" }}\n          >\n            <MatDelete index={params.row.id} />\n          </div>\n        );\n      },\n    },\n  ];\n  const [rows, setRows] = useState([]);\n  const [checker, setChecker] = useState(true);\n  const classes = styles();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setRows(JSON.parse(localStorage.getItem(\"DashBoardusers\")));\n        if (rows.length === 0 || checker) {\n          await adminLoginAPIMethod(\n            {\n              email: localStorage.getItem(\"email\"),\n              password: props.pass,\n            },\n            async (res) => {\n              await getAllUsersAPIMethod((res) => {\n                console.log(res.data.data); //console log all users\n\n                localStorage.setItem(\n                  \"users\",\n                  JSON.stringify(res.data.data.users)\n                ); //stringify object and store\n\n                var temp = [];\n                res.data.data.users.forEach((el, index) => {\n                  temp.push({\n                    id: el._id,\n                    name: el.name,\n                    email: el.email,\n                    joinedDate: el.joinedDate,\n                    type: el.accountType,\n                  });\n                });\n                localStorage.setItem(\n                  \"DashBoardusers\",\n                  JSON.stringify(temp)\n                ); //stringify object and store\n                setRows(temp);\n              });\n            }\n          );\n          setChecker(false);\n        }\n      } catch (err) {\n        console.log(err);\n        alert(err.response);\n      }\n    }\n    fetchData();\n  }, []);\n  return (\n    <>\n      <Container display=\"flex\" className={classes.cardContainer}>\n        <Typography className={classes.fontSeparator}>All Users</Typography>\n      </Container>\n      <Box\n        display=\"flex\"\n        style={{\n          height: \"70%\",\n          width: \"100%\",\n        }}\n      >\n        <DataGrid rows={rows} columns={columns} pageSize={5} columnBuffer={5} />\n      </Box>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}