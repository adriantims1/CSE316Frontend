{"ast":null,"code":"var _jsxFileName = \"/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/page/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/SideBar\";\nimport { Grid, Paper, makeStyles } from \"@material-ui/core\";\nimport UserHeader from \"../components/userHeader\";\nimport UserDashboard from \"../components/Dashboard SubComp/UserDashboard\";\nimport AdminDashboard from \"../components/Dashboard SubComp/adminDashboard\";\nimport { getBinomoDealsAPIMethod } from \"../api/profileClient\";\nimport { getprofileurlAPIMethod } from \"../api/profileClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\",\n    width: \"100vw\"\n  },\n  rightbar: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"80%\",\n    backgroundColor: theme.palette.primary.main,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  rightContainer: {\n    height: \"95%\",\n    width: \"95%\",\n    backgroundColor: theme.palette.primary.dark\n  }\n}));\nexport default function Dashboard() {\n  _s();\n\n  console.log(localStorage.getItem(\"isAdmin\"));\n  const [isAdmin] = useState(JSON.parse(localStorage.getItem(\"isAdmin\")));\n  const [executed, setExecuted] = useState(false);\n  const classes = styles();\n\n  var doOnce = () => {\n    if (!executed) {\n      setExecuted(true);\n      localStorage.setItem(\"isLoggedin\", true);\n    }\n  };\n\n  doOnce();\n  useEffect(() => {\n    if (localStorage.getItem(\"isAdmin\") === undefined) {\n      const sendLoginInfo = async () => {\n        try {\n          await getprofileurlAPIMethod(res => {\n            console.log(res.data.data);\n            localStorage.setItem(\"balance\", res.data.data.balance);\n            localStorage.setItem(\"accountType\", res.data.data.accountType);\n            localStorage.setItem(\"name\", res.data.data.name);\n            localStorage.setItem(\"profile_url\", res.data.data.profile_url);\n            localStorage.setItem(\"setting\", JSON.stringify(res.data.data.setting));\n            localStorage.setItem(\"isAdmin\", res.data.data.isAdmin);\n            localStorage.setItem(\"email\", res.data.data.email);\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      sendLoginInfo();\n    }\n\n    async function fetchData() {\n      try {\n        await getBinomoDealsAPIMethod(10, res => {\n          let won = 0;\n          let loss = 0;\n          let tie = 0;\n          res.data.data.forEach(element => element.status === \"won\" ? won = won + 1 : element.status === \"lost\" ? loss = loss + 1 : tie = tie + 1);\n          localStorage.setItem(\"seriesD\", [won, loss, tie]);\n        });\n      } catch (err) {\n        alert(err.response);\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.rightbar,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.rightContainer,\n        children: [/*#__PURE__*/_jsxDEV(UserHeader, {\n          page: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), isAdmin ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"O9h9i5kk8T2ca1g1evsLoRConWw=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/page/Dashboard.js"],"names":["React","useState","useEffect","Sidebar","Grid","Paper","makeStyles","UserHeader","UserDashboard","AdminDashboard","getBinomoDealsAPIMethod","getprofileurlAPIMethod","styles","theme","root","height","width","rightbar","display","backgroundColor","palette","primary","main","alignItems","justifyContent","rightContainer","dark","Dashboard","console","log","localStorage","getItem","isAdmin","JSON","parse","executed","setExecuted","classes","doOnce","setItem","undefined","sendLoginInfo","res","data","balance","accountType","name","profile_url","stringify","setting","email","err","fetchData","won","loss","tie","forEach","element","status","alert","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/SideBar\";\n\nimport { Grid, Paper, makeStyles } from \"@material-ui/core\";\n\nimport UserHeader from \"../components/userHeader\";\nimport UserDashboard from \"../components/Dashboard SubComp/UserDashboard\";\nimport AdminDashboard from \"../components/Dashboard SubComp/adminDashboard\";\nimport { getBinomoDealsAPIMethod } from \"../api/profileClient\";\nimport { getprofileurlAPIMethod } from \"../api/profileClient\";\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    width: \"100vw\",\n  },\n  rightbar: {\n    display: \"flex\",\n    height: \"100%\",\n    width: \"80%\",\n    backgroundColor: theme.palette.primary.main,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  rightContainer: {\n    height: \"95%\",\n    width: \"95%\",\n    backgroundColor: theme.palette.primary.dark,\n  },\n}));\n\nexport default function Dashboard() {\n  console.log(localStorage.getItem(\"isAdmin\"));\n\n  const [isAdmin] = useState(JSON.parse(localStorage.getItem(\"isAdmin\")));\n  const [executed, setExecuted] = useState(false);\n  const classes = styles();\n  var doOnce = () => {\n    if (!executed) {\n      setExecuted(true);\n      localStorage.setItem(\"isLoggedin\", true);\n    }\n  };\n  doOnce();\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"isAdmin\") === undefined) {\n      const sendLoginInfo = async () => {\n        try {\n          await getprofileurlAPIMethod((res) => {\n            console.log(res.data.data);\n            localStorage.setItem(\"balance\", res.data.data.balance);\n            localStorage.setItem(\"accountType\", res.data.data.accountType);\n            localStorage.setItem(\"name\", res.data.data.name);\n            localStorage.setItem(\"profile_url\", res.data.data.profile_url);\n            localStorage.setItem(\n              \"setting\",\n              JSON.stringify(res.data.data.setting)\n            );\n            localStorage.setItem(\"isAdmin\", res.data.data.isAdmin);\n            localStorage.setItem(\"email\", res.data.data.email);\n          });\n\n        } catch (err) {\n          console.log(err);\n        }\n      }\n      sendLoginInfo();\n    }\n    async function fetchData() {\n      try {\n        await getBinomoDealsAPIMethod(10, (res) => {\n          let won = 0;\n          let loss = 0;\n          let tie = 0;\n          res.data.data.forEach((element) =>\n            element.status === \"won\"\n              ? (won = won + 1)\n              : element.status === \"lost\"\n                ? (loss = loss + 1)\n                : (tie = tie + 1)\n          );\n          localStorage.setItem(\"seriesD\", [won, loss, tie]);\n        });\n      } catch (err) {\n        alert(err.response);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <Grid container alignItems=\"center\" className={classes.root}>\n      <Sidebar />\n      <Grid item className={classes.rightbar}>\n        <Paper className={classes.rightContainer}>\n          <UserHeader page=\"Dashboard\" />\n          {isAdmin ? <AdminDashboard /> : <UserDashboard />}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}