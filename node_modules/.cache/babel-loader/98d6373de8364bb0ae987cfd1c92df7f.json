{"ast":null,"code":"var _jsxFileName = \"/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/page/Live Trades.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport ResultCard from \"../components/ResultCard\";\nimport { Paper, makeStyles, Grid, Typography, Box } from \"@material-ui/core\"; //import useWebSocket from \"react-use-websocket\";\n\nimport Chart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  bodyContainer: {\n    height: \"80vh\",\n    width: \"95vw\",\n    backgroundColor: theme.palette.primary.main,\n    alignItems: \"inline\",\n    margin: \"0px 2%\",\n    display: \"flex\"\n  },\n  leftContainer: {\n    height: \"100%\",\n    width: \"80%\"\n  },\n  rightContainer: {\n    height: \"100%\",\n    width: \"30%\"\n  },\n  predictor: {\n    fontFamily: \"Inter\",\n    fontWeight: \"bold\",\n    fontSize: \"36px\"\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: \"5%\"\n  }\n}));\n\nconst Live = () => {\n  _s();\n\n  //const [price, setCurrPrice] = useState(0);\n  useEffect(() => {\n    var a = setInterval(async () => {\n      var temp = await axios.get(\"/api/candles/\");\n      temp = temp.data.data;\n      var temp2 = [];\n      var resMax,\n          resMin = 0;\n      console.log(temp);\n      temp.forEach(el => {\n        var result = [el.open, el.high, el.low, el.close];\n        temp2.push({\n          x: el.created_at,\n          y: result\n        });\n        if (resMax < Math.max(...result)) resMax = Math.max(...result);\n        if (resMin === 0 || resMin > Math.min(...result)) resMin = Math.min(...result);\n      });\n      ApexCharts.exec(\"realtime\", \"updateSeries\", [{\n        data: temp2\n      }]);\n      ApexCharts.exec(\"realtime\", \"updateOptions\", {\n        yaxis: {\n          min: resMin,\n          max: resMax\n        }\n      });\n    }, 5000);\n    return () => {\n      clearInterval(a);\n    };\n  }, []);\n  const [candleData, setCandleData] = useState([{\n    x: new Date(1538778600000),\n    y: [6629.81, 6650.5, 6623.04, 6633.33]\n  }, {\n    x: new Date(1538780400000),\n    y: [6632.01, 6643.59, 6620, 6630.11]\n  }, {\n    x: new Date(1538782200000),\n    y: [6630.71, 6648.95, 6623.34, 6635.65]\n  }, {\n    x: new Date(1538784000000),\n    y: [6635.65, 6651, 6629.67, 6638.24]\n  }, {\n    x: new Date(1538785800000),\n    y: [6638.24, 6640, 6620, 6624.47]\n  }]);\n  const [state, setState] = useState({\n    series: [{\n      name: \"series-1\",\n      data: candleData\n    }],\n    options: {\n      colors: [\"#ffffff\"],\n      chart: {\n        foreColor: \"#fff\",\n        id: \"realtime\",\n        height: 350,\n        type: \"candle\",\n        animations: {\n          enabled: true,\n          easing: \"linear\",\n          dynamicAnimation: {\n            speed: 1000\n          }\n        },\n        toolbar: {\n          show: false\n        },\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      title: {\n        text: \"5 Last Candles\",\n        align: \"left\",\n        style: {\n          color: \"#ffffff\"\n        }\n      },\n      markers: {\n        size: 0\n      },\n      legend: {\n        show: false\n      },\n      yaxis: {\n        max: 641.8685016,\n        min: 641.8684983\n      }\n    }\n  });\n  const classes = styles();\n  /*const { sendJsonMessage } = useWebSocket(\"wss://as.binomo.com/\", {\n    onOpen: () => {\n      sendJsonMessage({ action: \"subscribe\", rics: [\"Z-CRY/IDX\"] });\n    },\n    shouldReconnect: () => true,\n    onMessage: (e) => {\n      e = JSON.parse(e.data);\n      if (\"assets\" === e.data[0].action) {\n        setCurrPrice(e.data[0].assets[0].rate);\n      }\n    },\n  });*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.bodyContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        direction: \"row\",\n        className: classes.leftContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.predictor,\n              color: \"secondary\",\n              children: \"Live Trades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            width: \"100%\",\n            height: \"88.5%\"\n          },\n          className: classes.secondary,\n          id: \"chart\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: state.options,\n            series: state.series,\n            type: \"candlestick\",\n            width: \"100%\",\n            height: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Live, \"uHcFWPKt4Z119ePvBMIshIwc+lc=\");\n\n_c = Live;\nexport default Live;\n\nvar _c;\n\n$RefreshReg$(_c, \"Live\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/page/Live Trades.js"],"names":["React","useState","useEffect","NavBar","ResultCard","Paper","makeStyles","Grid","Typography","Box","Chart","ApexCharts","axios","styles","theme","bodyContainer","height","width","backgroundColor","palette","primary","main","alignItems","margin","display","leftContainer","rightContainer","predictor","fontFamily","fontWeight","fontSize","secondary","marginRight","Live","a","setInterval","temp","get","data","temp2","resMax","resMin","console","log","forEach","el","result","open","high","low","close","push","x","created_at","y","Math","max","min","exec","yaxis","clearInterval","candleData","setCandleData","Date","state","setState","series","name","options","colors","chart","foreColor","id","type","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","dataLabels","stroke","curve","title","text","align","style","color","markers","size","legend","classes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport ResultCard from \"../components/ResultCard\";\nimport { Paper, makeStyles, Grid, Typography, Box } from \"@material-ui/core\";\n//import useWebSocket from \"react-use-websocket\";\nimport Chart from \"react-apexcharts\";\nimport ApexCharts from \"apexcharts\";\nimport axios from \"axios\";\n\nconst styles = makeStyles((theme) => ({\n  bodyContainer: {\n    height: \"80vh\",\n    width: \"95vw\",\n    backgroundColor: theme.palette.primary.main,\n    alignItems: \"inline\",\n\n    margin: \"0px 2%\",\n    display: \"flex\",\n  },\n  leftContainer: {\n    height: \"100%\",\n    width: \"80%\",\n  },\n  rightContainer: {\n    height: \"100%\",\n    width: \"30%\",\n  },\n  predictor: {\n    fontFamily: \"Inter\",\n    fontWeight: \"bold\",\n    fontSize: \"36px\",\n  },\n  secondary: {\n    backgroundColor: theme.palette.secondary.main,\n    marginRight: \"5%\",\n  },\n}));\n\nconst Live = () => {\n  //const [price, setCurrPrice] = useState(0);\n\n  useEffect(() => {\n    var a = setInterval(async () => {\n      var temp = await axios.get(\"/api/candles/\");\n      temp = temp.data.data;\n      var temp2 = [];\n      var resMax,\n        resMin = 0;\n      console.log(temp);\n      temp.forEach((el) => {\n        var result = [el.open, el.high, el.low, el.close];\n        temp2.push({\n          x: el.created_at,\n          y: result,\n        });\n        if (resMax < Math.max(...result)) resMax = Math.max(...result);\n        if (resMin === 0 || resMin > Math.min(...result))\n          resMin = Math.min(...result);\n      });\n      ApexCharts.exec(\"realtime\", \"updateSeries\", [\n        {\n          data: temp2,\n        },\n      ]);\n      ApexCharts.exec(\"realtime\", \"updateOptions\", {\n        yaxis: { min: resMin, max: resMax },\n      });\n    }, 5000);\n\n    return () => {\n      clearInterval(a);\n    };\n  }, []);\n  const [candleData, setCandleData] = useState([\n    {\n      x: new Date(1538778600000),\n      y: [6629.81, 6650.5, 6623.04, 6633.33],\n    },\n    {\n      x: new Date(1538780400000),\n      y: [6632.01, 6643.59, 6620, 6630.11],\n    },\n    {\n      x: new Date(1538782200000),\n      y: [6630.71, 6648.95, 6623.34, 6635.65],\n    },\n    {\n      x: new Date(1538784000000),\n      y: [6635.65, 6651, 6629.67, 6638.24],\n    },\n    {\n      x: new Date(1538785800000),\n      y: [6638.24, 6640, 6620, 6624.47],\n    },\n  ]);\n\n  const [state, setState] = useState({\n    series: [\n      {\n        name: \"series-1\",\n        data: candleData,\n      },\n    ],\n    options: {\n      colors: [\"#ffffff\"],\n      chart: {\n        foreColor: \"#fff\",\n        id: \"realtime\",\n        height: 350,\n        type: \"candle\",\n        animations: {\n          enabled: true,\n          easing: \"linear\",\n          dynamicAnimation: {\n            speed: 1000,\n          },\n        },\n        toolbar: {\n          show: false,\n        },\n        zoom: {\n          enabled: false,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      title: {\n        text: \"5 Last Candles\",\n        align: \"left\",\n        style: {\n          color: \"#ffffff\",\n        },\n      },\n      markers: {\n        size: 0,\n      },\n\n      legend: {\n        show: false,\n      },\n      yaxis: {\n        max: 641.8685016,\n        min: 641.8684983,\n      },\n    },\n  });\n  const classes = styles();\n\n  /*const { sendJsonMessage } = useWebSocket(\"wss://as.binomo.com/\", {\n    onOpen: () => {\n      sendJsonMessage({ action: \"subscribe\", rics: [\"Z-CRY/IDX\"] });\n    },\n    shouldReconnect: () => true,\n    onMessage: (e) => {\n      e = JSON.parse(e.data);\n      if (\"assets\" === e.data[0].action) {\n        setCurrPrice(e.data[0].assets[0].rate);\n      }\n    },\n  });*/\n\n  return (\n    <>\n     \n      <Paper elevation={0} className={classes.bodyContainer}>\n        <Grid\n          container\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          direction=\"row\"\n          className={classes.leftContainer}\n        >\n          <Grid item>\n            <Box display=\"flex\">\n              <Typography className={classes.predictor} color=\"secondary\">\n                Live Trades\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid\n            item\n            style={{\n              width: \"100%\",\n              height: \"88.5%\",\n            }}\n            className={classes.secondary}\n            id=\"chart\"\n          >\n            <Chart\n              options={state.options}\n              series={state.series}\n              type=\"candlestick\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nexport default Live;\n"]},"metadata":{},"sourceType":"module"}