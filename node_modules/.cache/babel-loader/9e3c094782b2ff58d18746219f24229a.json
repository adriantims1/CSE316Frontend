{"ast":null,"code":"var _jsxFileName = \"/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/SendMessage SubComp/userSendMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles, withStyles } from \"@material-ui/core\";\nimport { ContactUsInfoAPIMethod } from \"../../api/generalClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n}));\nconst StyledButton = withStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"white\",\n    width: \"300px\"\n  },\n  label: {\n    textTransform: \"capitalize\",\n    fontSize: \"24px\"\n  }\n}))(Button);\nexport default function MessageCenter() {\n  _s();\n\n  useEffect(async () => {\n    try {} catch (err) {\n      alert(err.response);\n    }\n  }, []);\n  const classes = styles();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState('money');\n  const [open, setOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title == '') {\n      setTitleError(true);\n    }\n\n    if (details == '') {\n      setDetailsError(true);\n    }\n\n    if (title && details) {\n      await ContactUsInfoAPIMethod({\n        name: localStorage.getItem(\"name\"),\n        email: localStorage.getItem(\"email\"),\n        Date: new Date(),\n        message: {\n          title: details\n        }\n      });\n      onClick_send(e);\n    }\n  };\n\n  const onClick_send = e => {\n    setSnackbarMessage(\"Message Send!\");\n    setStatus(\"success\");\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.field,\n      onChange: e => setTitle(e.target.value),\n      label: \"Message Title\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      fullWidth: true,\n      required: true,\n      error: titleError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.field,\n      onChange: e => setDetails(e.target.value),\n      label: \"Details\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      multiline: true,\n      rows: 4,\n      fullWidth: true,\n      required: true,\n      error: detailsError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.field,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"URGENT*\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 54\n          }, this),\n          label: \"URGENT*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"Regular\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 54\n          }, this),\n          label: \"Regular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"Payment\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 54\n          }, this),\n          label: \"Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"User experience\",\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 62\n          }, this),\n          label: \"User experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageCenter, \"iIfAByEqrZTp+uFKMVw3xhCuxkI=\");\n\n_c = MessageCenter;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageCenter\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/components/SendMessage SubComp/userSendMessage.js"],"names":["React","useState","useEffect","Button","TextField","Radio","RadioGroup","FormControlLabel","FormControl","makeStyles","withStyles","ContactUsInfoAPIMethod","styles","theme","field","marginTop","marginBottom","display","StyledButton","root","backgroundColor","palette","secondary","main","color","width","label","textTransform","fontSize","MessageCenter","err","alert","response","classes","title","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","open","setOpen","snackbarMessage","setSnackbarMessage","status","setStatus","handleSubmit","e","preventDefault","name","localStorage","getItem","email","Date","message","onClick_send","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport {\n  makeStyles,\n  withStyles,\n} from \"@material-ui/core\";\nimport { ContactUsInfoAPIMethod } from \"../../api/generalClient\";\n\n\nconst styles = makeStyles((theme) => ({\n\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  },\n}));\n\nconst StyledButton = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    color: \"white\",\n    width: \"300px\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n    fontSize: \"24px\",\n  },\n}))(Button);\n\nexport default function MessageCenter() {\n\n  useEffect(async () => {\n    try {\n\n    } catch (err) {\n      alert(err.response);\n    }\n  }, []);\n  const classes = styles();\n\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n  const [open, setOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true)\n    }\n    if (details == '') {\n      setDetailsError(true)\n    }\n    if (title && details) {\n      await ContactUsInfoAPIMethod({\n        name: localStorage.getItem(\"name\"),\n        email: localStorage.getItem(\"email\"),\n        Date: new Date(),\n        message: { title: details },\n\n      });\n      onClick_send(e);\n    }\n  };\n  const onClick_send = (e) => {\n    setSnackbarMessage(\"Message Send!\");\n    setStatus(\"success\");\n    setOpen(true);\n  };\n  return (\n    <form noValidate>\n      <TextField className={classes.field}\n        onChange={(e) => setTitle(e.target.value)}\n        label=\"Message Title\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        fullWidth\n        required\n        error={titleError}\n      />\n      <TextField className={classes.field}\n        onChange={(e) => setDetails(e.target.value)}\n        label=\"Details\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        multiline\n        rows={4}\n        fullWidth\n        required\n        error={detailsError}\n      />\n      <FormControl className={classes.field}>\n        {/* <FormLabel>Notification Category</FormLabel> */}\n        <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n          <FormControlLabel value=\"URGENT*\" control={<Radio />} label=\"URGENT*\" />\n          <FormControlLabel value=\"Regular\" control={<Radio />} label=\"Regular\" />\n          <FormControlLabel value=\"Payment\" control={<Radio />} label=\"Payment\" />\n          <FormControlLabel value=\"User experience\" control={<Radio />} label=\"User experience\" />\n        </RadioGroup>\n      </FormControl>\n\n      <StyledButton>Send</StyledButton>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}