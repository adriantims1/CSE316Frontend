{"ast":null,"code":"import axios from \"axios\";\nconst defaultHeaders = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n  }\n};\nexport const ContactUsInfoAPIMethod = (userInfo, success) => {\n  return fetch(`http://localhost:5000/api/admin/ContactUs`, { ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(userInfo)\n  }).then(checkStatus).then(success);\n};\n_c = ContactUsInfoAPIMethod;\nexport const getAllNotificationsAPIMethod = success => {\n  return axios.get(\"http://localhost:5000/api/profile/notifications\", {\n    withCredentials: true\n  }).then(checkStatus).then(success);\n};\nexport const signUpAPIInfo = (profile, success) => {\n  return axios.post(`http://localhost:5000/api/profile/register`, profile, {\n    withCredentials: true\n  }).then(checkStatus).then(success);\n};\nexport const LoginAPIMethod = (profile, success) => {\n  return axios.post(`http://localhost:5000/api/profile/login`, profile, {\n    withCredentials: true\n  }).then(checkStatus).then(success);\n};\n_c2 = LoginAPIMethod;\nexport const LogoutAPIMethod = success => {\n  return axios.post(`/api/profile/logout`, {}, {\n    withCredentials: true\n  }).then(checkStatus).then(success);\n};\n_c3 = LogoutAPIMethod;\nexport const CheckOnlineAPIMethod = (profile, success) => {\n  return fetch(`/api/profile/checkonline`, { ...defaultHeaders,\n    method: \"GET\",\n    credentials: \"include\"\n  }).then(checkStatus).then(parseJSON).then(success);\n};\n_c4 = CheckOnlineAPIMethod;\n\nasync function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    console.log(\"testing\");\n    const res = await parseJSON(response);\n    const error = new Error(`HTTP Error: ${response.statusText}`);\n    error.status = response.statusText;\n    error.response = res.message ? res.message : res;\n    throw error;\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ContactUsInfoAPIMethod\");\n$RefreshReg$(_c2, \"LoginAPIMethod\");\n$RefreshReg$(_c3, \"LogoutAPIMethod\");\n$RefreshReg$(_c4, \"CheckOnlineAPIMethod\");","map":{"version":3,"sources":["/Users/nilsonchapagain/Desktop/316SeparatedProject/CSE316Frontend/website/src/api/generalClient.js"],"names":["axios","defaultHeaders","headers","ContactUsInfoAPIMethod","userInfo","success","fetch","method","body","JSON","stringify","then","checkStatus","getAllNotificationsAPIMethod","get","withCredentials","signUpAPIInfo","profile","post","LoginAPIMethod","LogoutAPIMethod","CheckOnlineAPIMethod","credentials","parseJSON","response","status","console","log","res","error","Error","statusText","message","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADY,CAAvB;AAMA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAC3D,SAAOC,KAAK,CAAE,2CAAF,EAA8C,EACxD,GAAGL,cADqD;AAExDM,IAAAA,MAAM,EAAE,MAFgD;AAGxDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AAHkD,GAA9C,CAAL,CAKJO,IALI,CAKCC,WALD,EAMJD,IANI,CAMCN,OAND,CAAP;AAOD,CARM;KAAMF,sB;AAUb,OAAO,MAAMU,4BAA4B,GAAIR,OAAD,IAAa;AACvD,SAAOL,KAAK,CACTc,GADI,CACA,iDADA,EACmD;AACtDC,IAAAA,eAAe,EAAE;AADqC,GADnD,EAIJJ,IAJI,CAICC,WAJD,EAKJD,IALI,CAKCN,OALD,CAAP;AAMD,CAPM;AASP,OAAO,MAAMW,aAAa,GAAG,CAACC,OAAD,EAAUZ,OAAV,KAAsB;AACjD,SAAOL,KAAK,CACTkB,IADI,CACE,4CADF,EAC+CD,OAD/C,EACwD;AAC3DF,IAAAA,eAAe,EAAE;AAD0C,GADxD,EAIJJ,IAJI,CAICC,WAJD,EAKJD,IALI,CAKCN,OALD,CAAP;AAMD,CAPM;AASP,OAAO,MAAMc,cAAc,GAAG,CAACF,OAAD,EAAUZ,OAAV,KAAsB;AAClD,SAAOL,KAAK,CACTkB,IADI,CACE,yCADF,EAC4CD,OAD5C,EACqD;AACxDF,IAAAA,eAAe,EAAE;AADuC,GADrD,EAIJJ,IAJI,CAICC,WAJD,EAKJD,IALI,CAKCN,OALD,CAAP;AAMD,CAPM;MAAMc,c;AAQb,OAAO,MAAMC,eAAe,GAAIf,OAAD,IAAa;AAC1C,SAAOL,KAAK,CACTkB,IADI,CAEF,qBAFE,EAGH,EAHG,EAIH;AACEH,IAAAA,eAAe,EAAE;AADnB,GAJG,EAQJJ,IARI,CAQCC,WARD,EASJD,IATI,CASCN,OATD,CAAP;AAUD,CAXM;MAAMe,e;AAYb,OAAO,MAAMC,oBAAoB,GAAG,CAACJ,OAAD,EAAUZ,OAAV,KAAsB;AACxD,SAAOC,KAAK,CAAE,0BAAF,EAA6B,EACvC,GAAGL,cADoC;AAEvCM,IAAAA,MAAM,EAAE,KAF+B;AAGvCe,IAAAA,WAAW,EAAE;AAH0B,GAA7B,CAAL,CAKJX,IALI,CAKCC,WALD,EAMJD,IANI,CAMCY,SAND,EAOJZ,IAPI,CAOCN,OAPD,CAAP;AAQD,CATM;MAAMgB,oB;;AAWb,eAAeT,WAAf,CAA2BY,QAA3B,EAAqC;AACnC,MAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOD,QAAP;AACD,GAFD,MAEO;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMC,GAAG,GAAG,MAAML,SAAS,CAACC,QAAD,CAA3B;AAEA,UAAMK,KAAK,GAAG,IAAIC,KAAJ,CAAW,eAAcN,QAAQ,CAACO,UAAW,EAA7C,CAAd;AACAF,IAAAA,KAAK,CAACJ,MAAN,GAAeD,QAAQ,CAACO,UAAxB;AACAF,IAAAA,KAAK,CAACL,QAAN,GAAiBI,GAAG,CAACI,OAAJ,GAAcJ,GAAG,CAACI,OAAlB,GAA4BJ,GAA7C;AAEA,UAAMC,KAAN;AACD;AACF;;AACD,SAASN,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,SAAOA,QAAQ,CAACS,IAAT,EAAP;AACD","sourcesContent":["import axios from \"axios\";\nconst defaultHeaders = {\n  headers: {\n    \"Content-Type\": \"application/json; charset=UTF-8\",\n  },\n};\n\nexport const ContactUsInfoAPIMethod = (userInfo, success) => {\n  return fetch(`http://localhost:5000/api/admin/ContactUs`, {\n    ...defaultHeaders,\n    method: \"POST\",\n    body: JSON.stringify(userInfo),\n  })\n    .then(checkStatus)\n    .then(success);\n};\n\nexport const getAllNotificationsAPIMethod = (success) => {\n  return axios\n    .get(\"http://localhost:5000/api/profile/notifications\", {\n      withCredentials: true,\n    })\n    .then(checkStatus)\n    .then(success);\n};\n\nexport const signUpAPIInfo = (profile, success) => {\n  return axios\n    .post(`http://localhost:5000/api/profile/register`, profile, {\n      withCredentials: true,\n    })\n    .then(checkStatus)\n    .then(success);\n};\n\nexport const LoginAPIMethod = (profile, success) => {\n  return axios\n    .post(`http://localhost:5000/api/profile/login`, profile, {\n      withCredentials: true,\n    })\n    .then(checkStatus)\n    .then(success);\n};\nexport const LogoutAPIMethod = (success) => {\n  return axios\n    .post(\n      `/api/profile/logout`,\n      {},\n      {\n        withCredentials: true,\n      }\n    )\n    .then(checkStatus)\n    .then(success);\n};\nexport const CheckOnlineAPIMethod = (profile, success) => {\n  return fetch(`/api/profile/checkonline`, {\n    ...defaultHeaders,\n    method: \"GET\",\n    credentials: \"include\",\n  })\n    .then(checkStatus)\n    .then(parseJSON)\n    .then(success);\n};\n\nasync function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    console.log(\"testing\");\n    const res = await parseJSON(response);\n\n    const error = new Error(`HTTP Error: ${response.statusText}`);\n    error.status = response.statusText;\n    error.response = res.message ? res.message : res;\n\n    throw error;\n  }\n}\nfunction parseJSON(response) {\n  return response.json();\n}\n"]},"metadata":{},"sourceType":"module"}